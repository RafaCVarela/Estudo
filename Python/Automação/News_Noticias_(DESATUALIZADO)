	Exemplo 1-

(versão: thesun_uk)
# Criando um driver com chromedriver e selenium.

from selenium import webdriver
from selenium.webdriver.chrome.service import Service

website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service)
driver.get(website)

containers = driver.find_elements(by="xpath", value="//div[@class='teaser__copy-container']")

for container in containers:
    title = driver.find_element(by="xpath", value="./a/h2").text
    subtitle = driver.find_element(by="xpath", value="./a/p").text
    link = driver.find_element(by="xpath", value="./a").get_attribute("href")


	Exemplo 2-

(versão: thesunuk)

# Criando um driver com chromedriver e selenium.

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
import pandas as pd


website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service)
driver.get(website)

containers = driver.find_elements(by="xpath", value="//div[@class='teaser__copy-container']")

titles = []
subtitles = []
links = []


for container in containers:
    title = driver.find_element(by="xpath", value="./a/h2").text
    subtitle = driver.find_element(by="xpath", value="./a/p").text
    link = driver.find_element(by="xpath", value="./a").get_attribute("href")
    titles.append(title)
    subtitles.append(subtitle)
    links.append(link)


my_dict = {'titles': titles, 'subtitles': subtitles, 'links': links}
df_headlines = pd.DataFrame(my_dict)
df_headlines.to_csv('headline.csv')

driver.quit()


(versão: ge)

# Salvando dados em CSV file.

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
import pandas as pd


website = "https://ge.globo.com/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service)
driver.get(website)

containers = driver.find_elements(by="xpath", value="//div[@class='feed-post-body']")

titles = []
links = []


for container in containers:
    title = driver.find_element(by="xpath", value="./div/div/a/h2").text
    link = driver.find_element(by="xpath", value="./div/div/a").get_attribute("href")
    titles.append(title)
    links.append(link)


my_dict = {'titles': titles, 'links': links}
df_headlines = pd.DataFrame(my_dict)
df_headlines.to_csv('headline.csv')

driver.quit()


	Exemplo 3-

(versão: thesunuk)

# Criando um driver com chromedriver e selenium.

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
import pandas as pd


website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

# headless-mode
options = Options()
options.headless = True

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service, options=options)
driver.get(website)

containers = driver.find_elements(by="xpath", value="//div[@class='teaser__copy-container']")

titles = []
subtitles = []
links = []


for container in containers:
    title = driver.find_element(by="xpath", value="./a/h2").text
    subtitle = driver.find_element(by="xpath", value="./a/p").text
    link = driver.find_element(by="xpath", value="./a").get_attribute("href")
    titles.append(title)
    subtitles.append(subtitle)
    links.append(link)


my_dict = {'titles': titles, 'subtitles': subtitles, 'links': links}
df_headlines = pd.DataFrame(my_dict)
df_headlines.to_csv('headline-headless.csv')

driver.quit()


(versão: ge)

# Headless-mode: as funções serão feitas em segundo plano.
# Salvando dados em CSV file.

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
import pandas as pd


website = "https://ge.globo.com/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

# headless-mode
options = Options()
options.headless = True

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service, options=options)
driver.get(website)

containers = driver.find_elements(by="xpath", value="//div[@class='feed-post-body']")

titles = []
links = []

for container in containers:
    title = driver.find_element(by="xpath", value="./div/div/a/h2").text
    link = driver.find_element(by="xpath", value="./div/div/a").get_attribute("href")
    titles.append(title)
    links.append(link)


my_dict = {'titles': titles, 'links': links}
df_headlines = pd.DataFrame(my_dict)
df_headlines.to_csv('headline-headless.csv')

driver.quit()


	Exemplo 4-

(versão 1)
# Criando um driver com chromedriver e selenium.

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
import pandas as pd
from datetime import datetime
import os
import sys


# Aqui temos o path do nosso arquivo que se tornará um executável.
application_path = os.path.dirname(sys.executable)

now = datetime.now()
# Devido o video que explica ser em inglês está como MMDDYY.
str_date = now.strftime(r"%m%d%Y")

website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

# headless-mode
options = Options()
options.headless = True

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service, options=options)
driver.get(website)

containers = driver.find_elements(by="xpath", value="//div[@class='teaser__copy-container']")

titles = []
subtitles = []
links = []


for container in containers:
    title = driver.find_element(by="xpath", value="./a/h2").text
    subtitle = driver.find_element(by="xpath", value="./a/p").text
    link = driver.find_element(by="xpath", value="./a").get_attribute("href")
    titles.append(title)
    subtitles.append(subtitle)
    links.append(link)


my_dict = {'titles': titles, 'subtitles': subtitles, 'links': links}
df_headlines = pd.DataFrame(my_dict)
df_headlines.to_csv(f'{application_path}\\headline-{str_date}.csv')

driver.quit()


(versão 2)

# Criando um driver com chromedriver e selenium.

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
import pandas as pd
from datetime import datetime
import os
import sys


# Aqui temos o path do nosso arquivo que se tornará um executável.
application_path = os.path.dirname(sys.executable)

now = datetime.now()
# Devido o video que explica ser em inglês está como MMDDYY.
str_date = now.strftime(r"%m%d%Y")

website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

# headless-mode
options = Options()
options.headless = True

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service, options=options)
driver.get(website)

containers = driver.find_elements(by="xpath", value="//div[@class='teaser__copy-container']")

titles = []
subtitles = []
links = []


for container in containers:
    title = driver.find_element(by="xpath", value="./a/h2").text
    subtitle = driver.find_element(by="xpath", value="./a/p").text
    link = driver.find_element(by="xpath", value="./a").get_attribute("href")
    titles.append(title)
    subtitles.append(subtitle)
    links.append(link)


my_dict = {'titles': titles, 'subtitles': subtitles, 'links': links}
df_headlines = pd.DataFrame(my_dict)

# Aqui para facilitar o uso no windows, usaremos um método do "os".
file_name = f'headline-{str_date}.csv'
final_path = os.path.join(application_path, file_name)

df_headlines.to_csv(final_path)

driver.quit()


	Exemplo 5-

(versão 1)
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By

website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

service = Service(executable_path=path)
chrome_options = webdriver.ChromeOptions()
# chrome_options.add_argument('--ignore-certificate-errors'), options=chrome_options
driver = webdriver.Chrome(service=service)
driver.get(website)

containers = driver.find_elements(By.XPATH, "//div[@class='teaser__copy-container']")

for container in containers:
    title = driver.find_element(By.XPATH, "//div[@class='teaser__copy-container']/a").text
    print("> Título: ", title)
    subtitle = driver.find_element(By.XPATH, "//div[@class='teaser__copy-container']/a/h3").text
    print("> Subtítulo: ", subtitle)
    link = driver.find_element(By.XPATH, "//div[@class='teaser__copy-container']/a").get_attribute("href")
    print("> Link", link)
    break

(versão 2)
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By

website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"

service = Service(executable_path=path)
chrome_options = webdriver.ChromeOptions()
# chrome_options.add_argument('--ignore-certificate-errors'), options=chrome_options
driver = webdriver.Chrome(service=service)
driver.get(website)

containers = driver.find_elements(By.XPATH, "//div[@class='teaser__copy-container']")

for container in containers:
    title = driver.find_element(By.XPATH, "//div[@class='teaser__copy-container']/a/span").text
    print("> Título: ", title)
    subtitle = driver.find_element(By.XPATH, "//div[@class='teaser__copy-container']/a/h3").text
    print("> Subtítulo: ", subtitle)
    link = driver.find_element(By.XPATH, "//div[@class='teaser__copy-container']/a").get_attribute("href")
    print("> Link", link)
    break


driver.quit()


	Exemplo 6-

(versão final)
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
import re
import pandas as pd
from datetime import datetime
import os
import sys


application_path = os.path.dirname(sys.executable)

now = datetime.now()
str_date = now.strftime(r"%m%d%Y")

website = "https://www.thesun.co.uk/sport/football/"
path = r"C:\Users\racra\Downloads\chromedriver-win64\chromedriver.exe"


chrome_options = Options()
chrome_options.add_argument("--headless=new")

service = Service(executable_path=path)
driver = webdriver.Chrome(service=service, options=chrome_options)
driver.get(website)

titles_container = driver.find_elements(By.XPATH, "//div[@class='teaser__copy-container']/a/span")
subtitles_container = driver.find_elements(By.XPATH, "//div[@class='teaser__copy-container']/a/h3")
links_container = driver.find_elements(By.XPATH, "//div[@class='teaser__copy-container']/a")

titleRegEx = re.compile(r"\w+")
subtitleRegEx = re.compile(r"\w+")

titles = []
subtitles = []
links = []

for title in titles_container:
    if titleRegEx.search(title.text):
        titles.append(title.text)


for subtitle in subtitles_container:
    if subtitleRegEx.search(subtitle.text):
        subtitles.append(subtitle.text)


for link in links_container:
    links.append(link.get_attribute("href"))


my_dict = {"titles": titles, "subtitles": subtitles, "links": links}

df = pd.DataFrame(my_dict)

file_name = f"headlines-{str_date}.csv"

final_path = os.path.join(application_path, file_name)

df.to_csv(final_path)

driver.quit()

