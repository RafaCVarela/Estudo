# Criando uma circunferência(eu acho)
# (versão minha definitiva, resolvida novamente após algum tempo)

import turtle
import math

def poligono(t, lado, n):
    angulo = 360 /n
    for i in range(n):
        t.fd(lado)
        t.lt(angulo)

def circunferencia(t, r):
    c = 2 * math.pi * r
    n = 50
    # Aqui o livro da uma dica que 'lado * n = circunferencia', 
    # porque , a circunferencia é um polígono de n lados
    lado = c / n 
    poligono(t, lado, n)

bob = turtle.Turtle()

circunferencia(bob, 100)

turtle.mainloop()

# (versão 1)
import turtle

def poligono(t, lado, n):

    for i in range(n):
        t.fd(lado)
        t.lt( 360 / n)

    turtle.mainloop()

bob = turtle.Turtle()

poligono(bob, 1, 360)

# (versão 2)

import turtle
import math

def poligono(t, lado, n):
    for i in range(n):
        t.fd(lado)
        t.lt(n)

def circunferencia(t, r, n):
    c = 2 * math.pi * r
    lado = c / n
    poligono(t, lado, n)

bob = turtle.Turtle()

circunferencia(bob, 1000, 50)

# (versão 3)

import turtle
import math

def poligono(t, lado, n):
    for i in range(n):
        t.fd(lado)
        t.lt(360 / n)

def circunferencia(t, r, n):
    c = 2 * math.pi * r
    lado = c / n
    poligono(t, lado, n)

bob = turtle.Turtle()

circunferencia(bob, 100, 30)

# (versão 4 - Acho que é a versão do autor)

import turtle
import math

def poligono(t, lado, n):
    for i in range(n):
        t.fd(lado)
        t.lt(360 / n)

def circunferencia(t, r):
    c = 2 * math.pi * r
    n = int(c / 3) + 1
    lado = c / n
    poligono(t, lado, n)

bob = turtle.Turtle()

circunferencia(bob, 100)
